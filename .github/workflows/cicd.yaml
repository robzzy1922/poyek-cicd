name: Laravel CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: laravel
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: laravel_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          extensions: mbstring, ctype, fileinfo, openssl, PDO, tokenizer, xml, pgsql, pdo_pgsql
          coverage: none

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-interaction --no-progress

      - name: Copy .env.example to .env
        run: |
          cp .env.example .env
          sed -i 's/DB_CONNECTION=mysql/DB_CONNECTION=pgsql/' .env
          sed -i 's/DB_HOST=127.0.0.1/DB_HOST=postgres/' .env
          sed -i 's/DB_PORT=3306/DB_PORT=5432/' .env
          sed -i 's/DB_DATABASE=signix_database/DB_DATABASE=laravel_test/' .env
          sed -i 's/DB_USERNAME=root/DB_USERNAME=laravel/' .env
          sed -i 's/DB_PASSWORD=/DB_PASSWORD=secret/' .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Run database migrations and seed
        run: php artisan migrate:fresh --seed

      - name: Execute tests
        run: php artisan test

      - name: Build assets (if using npm)
        run: |
          npm install
          npm run prod

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v3
        with:
          name: laravel-app
          path: |
            .
            !.github/
            !.git/
            !node_modules/
            !vendor/
            !storage/debugbar/
          retention-days: 1

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: laravel-app
          path: ./deploy

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Deploy to server via SCP/SSH
        run: |
          # Buat direktori sementara di server
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} "mkdir -p ~/laravel-temp-deploy"

          # Upload files ke server
          scp -o StrictHostKeyChecking=no -r ./deploy/* ${{ secrets.USERNAME}}@${{ secrets.HOST }}:~/laravel-temp-deploy/

            # Jalankan deployment script di server
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME }}@${{ secrets.HOST }} << EOF
            cd ~/laravel-temp-deploy

            # Backup existing deployment (optional)# tar -czf /backup/laravel-backup-$(date +"%Y%m%d%H%M%S").tar.gz /var/www/laravel-app

            # Copy files to production directory
            sudo rsync -avz --delete \
              --exclude='.env' \
              --exclude='storage' \
              --exclude='.git' \
              --exclude='.github' \
              ~/laravel-temp-deploy/ /var/www/laravel-app/

            # Copy .env jika diperlukan (biasanya tidak dilakukan di CI/CD)# sudo cp ~/laravel-temp-deploy/.env /var/www/laravel-app/.env

            # Set permissions
            sudo chown -R www-data:www-data /var/www/laravel-app
            sudo chmod -R 755 /var/www/laravel-app/storage
            sudo chmod -R 755 /var/www/laravel-app/bootstrap/cache

            # Run deployment commands
            cd /var/www/laravel-app
            sudo -u www-data composer install --optimize-autoloader --no-dev
            sudo -u www-data php artisan config:cache
            sudo -u www-data php artisan route:cache
            sudo -u www-data php artisan view:cache
            sudo -u www-data php artisan migrate --force

          # Restart services if needed# sudo systemctl restart php8.2-fpm# sudo systemctl restart nginx

            # Cleanup
            rm -rf ~/laravel-temp-deploy
          EOF
